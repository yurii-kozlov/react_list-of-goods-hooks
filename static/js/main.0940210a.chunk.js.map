{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","preparedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAxCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNO,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITd,GACFO,EAAaQ,UAIfC,QAAQC,IAAId,EAAUH,GAEfO,EAaeW,CACpBrB,EAAiB,CAAEG,aAAYG,aAYjC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWhB,IAAaP,EAASe,SAC7B,iBACA,0BACJU,QAAS,kBAAMjB,EAAYR,EAASe,WALtC,iCAUA,wBACES,KAAK,SACLD,UAAWhB,IAAaP,EAASiB,OAC7B,oBACA,6BACJQ,QAAS,kBAAMjB,EAAYR,EAASiB,SALtC,4BAUA,wBACEO,KAAK,SACLD,UAAWnB,EACP,oBACA,6BACJqB,QArCQ,WACdpB,GAAW,SAACqB,GAAD,OAAcA,MA+BrB,sBAUgB,IAAftB,GAAwBG,IAAaP,EAASM,KAC7C,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QA1CiB,WACzBjB,EAAYR,EAASM,MACrBD,GAAW,IAqCL,mBAOE,MAGN,6BACGI,EAAckB,KAAI,SAACC,GAAD,OACjB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC7HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0940210a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) : number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const preparedGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  const reverse = () => {\n    setReverse((current) => !current);\n  };\n\n  const sortInInitialOrder = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortType === SortType.ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortType === SortType.LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isReversed !== false || sortType !== SortType.NONE ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={sortInInitialOrder}\n          >\n            Reset\n          </button>\n        ) : ''}\n      </div>\n\n      <ul>\n        {preparedGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}